''' Authors: Dylan Albrecht
             Trent Woodbury

    Date: December 17, 2016

    Takes MongoDB collection 'breweries_raw' generated by get_breweries.py
    to MongoDB collection 'breweries_clean'

    To run AWS MongoDB locally, use mongo $MONGO_HOSTNAME:27017 -u $MONGO_USERNAME -p $MONGO_PASSWORD

'''
import sys
import os

from pymongo import MongoClient
from pymongo.errors import ServerSelectionTimeoutError


if __name__ == '__main__':

    ########
    # Load
    MONGO_USERNAME = os.environ['MONGO_USERNAME']
    MONGO_PASSWORD = os.environ['MONGO_PASSWORD']
    MONGO_HOSTNAME = os.environ['MONGO_HOSTNAME']

    # Check server:
    try:
        address = 'mongodb://'
        address += MONGO_USERNAME + ':'
        address += MONGO_PASSWORD + '@'
        address += MONGO_HOSTNAME
        cli = MongoClient(address, serverSelectionTimeoutMS=100)
        cli.server_info()

    except ServerSelectionTimeoutError as e:
        print "Server error!  (Is it plugged in?): "
        print e
        raise e

    raw = 'breweries_raw'
    clean = 'breweries_clean'

    db = cli['beer_db']
    cols = db.collection_names()

    # Check for collections:
    if raw not in cols:
        print raw + ' does not exists yet! Run web-scraper first!'
        sys.exit()

    if clean in cols:
        print clean + ' already exists! Check or drop.'
        sys.exit()

    beer_co_raw = db[raw]
    beer_co_clean = db[clean]

    ########################
    # Process / Write to DB

    # DYLAN: I got 244 pages -> 12200 beers  (though I think it should be 247?)
    # Each document will be one beer:om
    for entry in beer_co_raw.find():
        try:
            beer_co_clean.insert_one(entry['data'][0])
        except:
            beer_co_clean.insert_one({})
